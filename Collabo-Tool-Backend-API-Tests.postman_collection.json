{
  "info": {
    "name": "Collabo Tool Backend API Tests",
    "description": "Complete API testing collection for the Collabo Tool backend server with cookie-based authentication",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-set the auth token if available",
          "if (pm.globals.get('authToken')) {",
          "    pm.request.headers.add({",
          "        key: 'Authorization',",
          "        value: 'Bearer ' + pm.globals.get('authToken')",
          "    });",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response has ok field', function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('ok', true);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "health"
          ]
        }
      }
    },
    {
      "name": "Auth",
      "item": [
        {
          "name": "Login (Step 1 - Request OTP)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.userId) {",
                  "        pm.globals.set('userId', responseJson.userId);",
                  "        console.log('User ID saved:', responseJson.userId);",
                  "    }",
                  "    if (responseJson.step === 'OTP') {",
                  "        console.log('OTP sent! Check your email or backend console for the OTP code.');",
                  "    }",
                  "}",
                  "",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response indicates OTP step', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.step).to.equal('OTP');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"jkezpascual@gmail.com\",\n  \"password\": \"your_password_here\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "login"
              ]
            }
          }
        },
        {
          "name": "Verify OTP (Step 2 - Complete Login)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.token) {",
                  "        pm.globals.set('authToken', responseJson.token);",
                  "        console.log('Auth token saved:', responseJson.token);",
                  "    }",
                  "    if (responseJson.user) {",
                  "        console.log('User info:', responseJson.user);",
                  "    }",
                  "}",
                  "",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains access token', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('token');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"327404ce-d1dd-4a93-a108-dfa5a415a734\",\n  \"username\": \"JohnDoe\",\n  \"otp\": \"YOUR_OTP_HERE\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/otp",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "otp"
              ]
            }
          }
        },
        {
          "name": "Get Profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains user profile', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('user');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/profile",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "profile"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Get All Users",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains users array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('users');",
                  "    pm.expect(responseJson.data.users).to.be.an('array');",
                  "});",
                  "",
                  "pm.test('Response contains pagination', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('pagination');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users?page=1&limit=10&status=active&sortOrder=asc",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "status",
                  "value": "active"
                },
                {
                  "key": "sortOrder",
                  "value": "asc"
                }
              ]
            }
          }
        },
        {
          "name": "Get All Users (First-time)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains users array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('users');",
                  "    pm.expect(responseJson.data.users).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users?page=1&limit=10&status=first-time&sortOrder=asc",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "status",
                  "value": "first-time"
                },
                {
                  "key": "sortOrder",
                  "value": "asc"
                }
              ]
            }
          }
        },
        {
          "name": "Get Organizational Units",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains ous array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('ous');",
                  "    pm.expect(responseJson.data.ous).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/reference/ous",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                "reference",
                "ous"
              ]
            }
          }
        },
        {
          "name": "Get Hierarchy Options",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains supervisors and managers', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('supervisors');",
                  "    pm.expect(responseJson.data).to.have.property('managers');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/reference/hierarchy",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                "reference",
                "hierarchy"
              ]
            }
          }
        },
        {
          "name": "Create User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains created user', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('user');",
                  "});",
                  "",
                  "// Save the user ID for other tests",
                  "if (pm.response.code === 201) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.data && responseJson.data.user) {",
                  "        pm.globals.set('testUserId', responseJson.data.user.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"employeeId\": \"TEST001\",\n  \"name\": \"Test User\",\n  \"email\": \"test@example.com\",\n  \"role\": \"Frontline\",\n  \"ou\": \"IT Department\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users"
              ]
            }
          }
        },
        {
          "name": "Get User by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains user', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('user');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/{{testUserId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                "{{testUserId}}"
              ]
            }
          }
        },
        {
          "name": "Update User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains updated user', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('user');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test User Updated\",\n  \"status\": \"Active\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/{{testUserId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                "{{testUserId}}"
              ]
            }
          }
        },
        {
          "name": "Change User Password",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"newPassword\": \"newpassword123\",\n  \"requirePasswordChange\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/{{testUserId}}/password",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                "{{testUserId}}",
                "password"
              ]
            }
          }
        },
        {
          "name": "Lock User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"locked\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/{{testUserId}}/lock",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                "{{testUserId}}",
                "lock"
              ]
            }
          }
        },
        {
          "name": "Unlock User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"locked\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/{{testUserId}}/lock",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                "{{testUserId}}",
                "lock"
              ]
            }
          }
        },
        {
          "name": "Deactivate User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"active\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/{{testUserId}}/activate",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                "{{testUserId}}",
                "activate"
              ]
            }
          }
        },
        {
          "name": "Activate User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"active\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/{{testUserId}}/activate",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                "{{testUserId}}",
                "activate"
              ]
            }
          }
        },
        {
          "name": "Send Password Reset",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/{{testUserId}}/send-reset",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                "{{testUserId}}",
                "send-reset"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Bulk Operations",
      "item": [
        {
          "name": "Bulk Lock Users",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userIds\": [\"{{testUserId}}\"],\n  \"locked\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/bulk/lock",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                "bulk",
                "lock"
              ]
            }
          }
        },
        {
          "name": "Bulk Activate Users",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userIds\": [\"{{testUserId}}\"],\n  \"active\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/bulk/activate",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                "bulk",
                "activate"
              ]
            }
          }
        },
        {
          "name": "Bulk Upload Users",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains bulk upload results', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('successful');",
                  "    pm.expect(responseJson.data).to.have.property('failed');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"users\": [\n    {\n      \"employeeId\": \"BULK001\",\n      \"name\": \"Bulk User 1\",\n      \"email\": \"bulk1@example.com\",\n      \"role\": \"Frontline\",\n      \"ou\": \"IT Department\"\n    },\n    {\n      \"employeeId\": \"BULK002\",\n      \"name\": \"Bulk User 2\",\n      \"email\": \"bulk2@example.com\",\n      \"role\": \"Support\",\n      \"ou\": \"IT Department\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/bulk/upload",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                "bulk",
                "upload"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Debug Endpoints",
      "item": [
        {
          "name": "Test Auth Middleware",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// This should return 401 without auth token",
                  "if (!pm.globals.get('authToken')) {",
                  "    pm.test('Status code is 401 (Unauthorized)', function () {",
                  "        pm.response.to.have.status(401);",
                  "    });",
                  "} else {",
                  "    pm.test('Status code is 200 (Authorized)', function () {",
                  "        pm.response.to.have.status(200);",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users?page=1&limit=1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "1"
                }
              ]
            }
          }
        },
        {
          "name": "Test No Auth Required",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "health"
              ]
            }
          }
        }
      ]
    }
  ]
}
